"""
Target Problem:
---------------
* A classifier for the diagnosis of Autism Spectrum Disorder (ASD)

Proposed Solution (Machine Learning Pipeline):
----------------------------------------------
* MRMR algorithm -> Gradient Boosting

Input to Proposed Solution:
---------------------------
* Directories of training and testing data in csv file format
* These two types of data should be stored in n x m pattern in csv file format.

  Typical Example:
  ----------------
  n x m samples in training csv file (n number of samples, m - 1 number of features, ground truth labels at last column)
  k x s samples in testing csv file (k number of samples, s number of features)

* These data set files are ready by load_data() function.
* For comprehensive information about input format, please check the section
  "Data Sets and Usage Format of Source Codes" in README.md file on github.

Output of Proposed Solution:
----------------------------
* Predictions generated by learning model for testing set
* They are stored in "submission.csv" file.

Code Owner:
-----------
* Copyright © Team 2. All rights reserved.
* Copyright © Istanbul Technical University, Learning From Data Spring 2019. All rights reserved. """

from reduce_dim import *
from sklearn.ensemble import GradientBoostingClassifier

# ********** MAIN PROGRAM ********** #

# test and training data are read from csv file by helper functions
tra_data, tst_features = load_data("train.csv", "test.csv")
tra_features, tra_labels = split_data(tra_data)

# Dimension of the data is reduced in a preprocessing step.
pcc_tra_features, pcc_tst_features = apply_MRMR(3, tra_data, tst_features)

grd_boost_clf = GradientBoostingClassifier(n_estimators=34, learning_rate=1.27,
                                           max_features=3, max_depth=3, random_state=7)

grd_boost_clf.fit(pcc_tra_features, tra_labels)  # training step
predictions = grd_boost_clf.predict(pcc_tst_features)  # testing step

# the results are written to output file.
write_output(predictions, "Submission.txt")
